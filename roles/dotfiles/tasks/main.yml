---
# Clone Dotfiles Repository
- name: 'Clone Dotfiles Repository'
  ansible.builtin.git:
    repo: '{{ DOTFILES_REPO_HTTPS }}'
    clone: true
    dest: '{{ DOTFILES_DIR }}'
    force: false # respect local changes to prevent dotfile loss
    remote: origin
    update: true
    recursive: true # whether submodules should be included/skipped
  become: true

# File Permissions: Dotfiles
- name: 'Set File Permissions: {{ DOTFILES_DIR }}/*'
  ansible.builtin.file:
    path: '{{ DOTFILES_DIR }}'
    state: directory
    mode: '0755'
    owner: '{{ ansible_user }}'
    group: 'staff'
    recurse: true

# File Permissions: Global Shell Files
- name: 'Set Permissions: Global Shell Files'
  ansible.builtin.file:
    path: '{{ item.src }}'
    state: 'file'
    mode: '0644'
    owner: 'root'
    group: 'wheel'
    recurse: false
  loop: "{{ shell_global }}"

# File Permissions: User Shell Files
- name: 'Set Permissions: User Shell Files'
  ansible.builtin.file:
    path: '{{ item.src }}'
    state: 'file'
    mode: '0644'
    owner: '{{ ansible_user }}'
    group: 'staff'
    recurse: false
  loop: "{{ shell_home }}"

# File Permissions: Shell Config Dir
- name: 'Set Permissions: Shell Config Dir'
  ansible.builtin.file:
    path: '{{ item.src }}'
    state: 'directory'
    mode: '0744'
    owner: '{{ ansible_user }}'
    group: 'staff'
    recurse: true
  loop: "{{ shell_config_dir }}"

# Copy: Global Shell Files
- name: 'Copy: Global Shell Files'
  ansible.builtin.copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '0644'
    owner: 'root'
    group: 'wheel'
    force: true
    remote_src: true
  loop: "{{ shell_global }}"

# Cleanup: User Shell Files (dest)
- name: 'Cleanup: User Shell Files'
  ansible.builtin.file:
    path: '{{ item.dest }}'
    state: 'absent'
    force: true
  loop: "{{ shell_home }}"
  become: true

# Cleanup: Dotfiles (dest)
- name: 'Cleanup: Dotfiles'
  ansible.builtin.file:
    path: '{{ item.dest }}'
    state: 'absent'
    force: true
  loop: "{{ dotfiles }}"
  become: true

# Symlink: User Shell Files
- name: 'Symlink: User Shell Files'
  ansible.builtin.file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: 'link'
    force: true
  loop: "{{ shell_home }}"

# Symlink: Dotfiles
- name: 'Symlink: Dotfiles'
  ansible.builtin.file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: 'link'
    force: true
  loop: "{{ dotfiles }}"

