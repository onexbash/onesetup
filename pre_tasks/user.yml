---
# Configure Groups
- name: "Setup Group: wheel"
  ansible.builtin.group:
    name: "wheel"
    state: present
    system: false
- name: "Setup Group: staff"
  ansible.builtin.group:
    name: "staff"
    state: present
    system: false
- name: "Setup Group: service"
  ansible.builtin.group:
    name: "service"
    state: present
    system: true

# Configure Users
- name: "Setup User: {{ ansible_user }}"
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    comment: "{{ ansible_user }}"
    group: "staff"
    system: false
    password: "{{ su_password }}"
    update_password: "on_create" # whether to update password if it differs [always/on_create]
    # set the default shell to bash
    shell: >-
      {{ "/opt/homebrew/bin/zsh" if ansible_facts['os_family'] == 'Darwin' }}
- name: "Setup User: root"
  ansible.builtin.user:
    name: "root"
    comment: "root"
    group: "wheel"
    system: false
    password: "{{ su_password }}"
    update_password: "on_create" # whether to update password if it differs [always/on_create]
    # set the default shell to bash
    shell: >-
      {{ "/opt/homebrew/bin/zsh" if ansible_facts['os_family'] == 'Darwin' }}
  become: true

# Check if Ansible User has Sudo Privileges
- name: "Log User has Sudo Privileges"
  debug:
    msg: "OK: {{ ansible_user }} has Sudo Privileges"
  when: check_sudo.stdout == 'root'
- name: "Log User lacks Sudo Privileges"
  debug:
    msg: "ERROR: {{ ansible_user }} doesnt have Sudo Privileges"
  when: check_sudo.stdout != 'root'
