---
# Configure Groups
- name: "Group: Configure 'wheel'"
  ansible.builtin.group:
    name: "wheel"
    state: present
    system: false
- name: "Group: Configure 'staff'"
  ansible.builtin.group:
    name: "staff"
    state: present
    system: false
- name: "Group: Configure 'service'"
  ansible.builtin.group:
    name: "service"
    state: present
    system: true

# Configure Users
- name: "User: Configure {{ ansible_user }}"
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    comment: "{{ ansible_user }}"
    group: "staff"
    system: false
    password: "{{ su_password }}"
    update_password: "on_create" # whether to update password if it differs [always/on_create]
    # set the default shell to bash
    shell: >-
      {{ "/opt/homebrew/bin/bash"
         if ansible_facts['os_family'] == 'Darwin'
         else "/bin/bash" }}
- name: "User: Configure 'root'"
  ansible.builtin.user:
    name: "root"
    comment: "root"
    group: "wheel"
    system: false
    password: "{{ su_password }}"
    update_password: "on_create" # whether to update password if it differs [always/on_create]
    # set the default shell to bash
    shell: >-
      {{ "/opt/homebrew/bin/bash"
         if ansible_facts['os_family'] == 'Darwin'
         else "/bin/bash" }}
  become: true

# Verify Users & Groups Configuration
- name: "Ensure Ansible Connect User has sudo privileges"
  block:
    - name: "Test sudo access"
      become: true
      command: "whoami"
      register: sudo_check
    - debug:
        msg: "✓ SUCCESS: User has sudo privileges (whoami returned: {{ sudo_check.stdout }})"
  rescue:
    - debug:
        msg: "✗ FAILED: User does not have sudo privileges"

